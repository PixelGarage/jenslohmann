<?php
/**
 * Created by PhpStorm.
 * User: ralph
 * Date: 01.12.16
 * Time: 17:56
 */

/**
 * Notifies of a newly saved instagram media item.
 *
 * @param $type  string
 *    The type of the instagram media (image, video)
 * @param $item
 *    The instagram media item object
 *   stdClass containing the instagram media item.
 * @see https://www.instagram.com/developer/endpoints/media/ for details about the contents of $item.
 */
function pxl_hooks_instagram_media_save($type, $item) {
  //
  // save only image (no video)
  $filename = $type . $item->instagram_id;
  $picture = _import_picture($filename, $item->standard_resolution);
  $caption = ($item->caption && $item->caption->text) ? $item->caption->text : '';

  $node = new stdClass();
  $node->type = 'instagram';
  $node->language = LANGUAGE_NONE;
  $node->uid = 1;
  $node->status = 1;
  node_object_prepare($node);

  // assign all fields
  $node->title = $filename;
  $node->field_post_id[LANGUAGE_NONE][0]['value'] = $item->instagram_id;
  $node->field_picture[LANGUAGE_NONE][0]['fid'] = $picture->fid;
  $node->field_created_time[LANGUAGE_NONE][0]['value'] = strtotime($item->created_time);
  $node->created = strtotime($item->created_time);
  $node->field_link[LANGUAGE_NONE][0]['url'] = $item->instagram_link;
  $node->field_instagram_user[LANGUAGE_NONE][0]['value'] = $item->instagram_user;
  $node->field_instagram_tags[LANGUAGE_NONE][0]['value'] = $item->tags;
  $node->body[LANGUAGE_NONE][0]['value'] = $caption;

  // save node
  $node = node_submit($node);
  node_save($node);
}


function _import_picture($unique_name, $uri) {
  // download file and manage it
  $ext = '.' . pathinfo($uri, PATHINFO_EXTENSION);
  $filename = $unique_name . $ext;

  // get or create user picture object
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'file')
    ->propertyCondition('filename', $filename)
    ->range(0, 1);
  $result = $query->execute();

  if (isset($result['file'])) {
    // get existing
    $file = file_load(key($result['file']));

  } else {
    $file = system_retrieve_file($uri, 'public://images/' . $filename, TRUE, FILE_EXISTS_REPLACE);
  }
  return $file;
}
